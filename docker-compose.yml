version: "3.9"

services:
  server:
    container_name: "log_injestor_server"
    image: "log_injestor_server"
    build:
      context: .
      target: ${TARGET}
    environment:
      - COMPOSE_PROJECT_NAME=${PROJECT_NAME}
    ports:
      - ${SERVER_PORT}:8000
    volumes:
      - .:/app
    depends_on:
      - postgresdb
      - mongodb
      - broker
      - zookeeper
    networks:
      - default

  postgresdb:
    container_name: "log_injestor_pg_db"
    image: "postgres:14-alpine"
    ports:
      - ${POSTGRES_PORT}:5432
    env_file:
      - .env
    volumes:
      - ${POSTGRES_DATA}:/var/lib/postgresql/data
    networks:
      - default

  mongodb:
    container_name: "log_injestor_mg_db" 
    image: "mongo"
    ports:
      - ${MONGO_PORT}:27017
    env_file:
      - .env
    volumes:
      - ${MONGO_DATA}:/var/lib/mongo/data
    networks:
      - default

  zookeeper:
    image: confluentinc/cp-zookeeper
    hostname: zookeeper
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - default

  broker:
    image: confluentinc/cp-kafka
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      - default

networks:
  default:
    name: ${PROJECT_NAME}_network
    external: true
